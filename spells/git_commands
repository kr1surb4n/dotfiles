echo "update git submodules";; git submodule update --init --recursive
echo "fetch all and prune"; git fetch --all --tags --prune
echo "fetch all"; git fetch --all --tags
echo "git soft reset"; git reset $(choose_commit)
echo "git hard reset"; git reset --hard $(choose_commit)
echo "hard reset with removing untracted files";git reset --hard && git clean -dfx
echo "git remove untracked files";git clean -fd
echo "git merge branch"; git merge $(choose_branch)
echo "git status gs";git status
echo "git status gs short";git status -s
echo "git init submodules";git submodule update --init --recursive
echo "git rebase to branch"; git rebase $(choose_branch)
echo "git push branch to origin"; git push origin $(choose_branch)
echo "git push tags force"; git push --tags -f
echo "merge unrelated histories"; git pull origin master --allow-unrelated-histories && git merge origin origin/master
git pull
git remote
git remote -v
git diff
git diff --staged
git diff -w "$@" | vim -R -
git commit --interactive
echo "remove git branch"; git branch -d $(choose_branch)
echo "remove branch on remotes"; git branch -D $(choose_branch)
git shortlog -sn
git archive --format zip --output
git log --graph --pretty=oneline --abbrev-commit
git log --graph --pretty=format:'%C(bold)%h%Creset%C(magenta)%d%Creset %s %C(yellow)<%an> %C(cyan)(%cr)%Creset' --abbrev-commit --date=relative"
git whatchanged
git stash
git stash branch
git stash drop
git stash list
git stash pop

echo "git add";git add -i
echo "Show ignored files"; git ls-files . --ignored --exclude-standard --others
echo "show untracked files"; git ls-files . --exclude-standard --others
echo "Show commits since last pull"; git log HEAD@{1}..HEAD@{0}
echo "Add uncommitted and unstaged changes to the last commit"; git commit -a --amend -C HEAD

echo "checkout/switch git branch"; fbr
echo "checkout/switch tag"; fco
echo "switch to new git branch"; git switch -c $(fill 'Branch name:')

echo "make working"; git switch -c working
echo "removeworking"; removeworking

echo "start new working branch cycle"; newwork

echo "show git logs"; gitlogs
echo "show short git logs"; shortlogs
echo "squash current branch"; squashcurrent

echo "remove file from git history"; git filter-branch --force --index-filter "git rm --cached --ignore-unmatch src/Credentials.json" --prune-empty --tag-name-filter cat -- --all

